/* Программа выполняет поиск максимального числа в списке целых чисел */
.text                 /* секция кода */
.global _start
_start:
    movia   r4, RESULT  	# В регистр r4 запишем адрес ОП, куда поместим результат 
    ldw  r5, 4(r4)      		# Считываем в регистр r5 значение N -количество чисел в списке 
    addi r6, r4, 8   		# Вычисляем адрес памяти, с которого начинают располагаться числа для поиска и записываем его в r6
    ldw  r7, (r6)       		# В регистр r7 из ОП считывам первое число из списка 

LOOP:
    subi r5, r5, 1   		# Уменьшаем значение количества чисел в списке 
    beq  r5, r0, DONE    	# Если значение регистра r5 равно 0, то выходим из цикла 
    addi r6, r6, 4   		# Увеличиваем адрес памяти на 4 для перехода к следующему числу в списке 
    ldw  r8, (r6)        		# Считываем в r8 следующее число из списка 
    bge  r7, r8, LOOP    	# Если найденное максимальное число больше или равно считанному, то возвращаемся в начало цикла
    mov  r7, r8  		# Иначе, обновляем в r7 максимальное число 
    br   LOOP            		# Безусловный переход в начало цикла 
DONE:
    stw  r7, (r4)        		# Записываем найденное число в ячейку памяти RESULT 

STOP:   
    br   STOP            		# Бесконечный цикл. Завершаем программу
 
    
/* Далее размещается область данных программы */
RESULT:
.skip   4       			# Резервируем 4 байта для записи результата 
N:
.word 7         		# Количество чисел в списке 
NUMBERS:
.word   4, 5, 3, 6, 1, 8, 2     	# Числа из списка 

.end
